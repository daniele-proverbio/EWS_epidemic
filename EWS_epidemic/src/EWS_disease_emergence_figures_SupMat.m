%% Performance of early warning signals for disease emergence
% This notebook generates the figures for the main text
%
% Author: Daniele Proverbio
% Date: 15/09/2020
% Affiliation: Luxembourg Center for Systems Biomedicine, University of
% Luxembourg
% Contacts: daniele.proverbio@{uni.lu, outlook.com}

%%
clc; clear; close all;

%% Dataset

% time
t1 = datetime(2020,2,24,8,0,0);
t2 = datetime(2020,9,13,8,0,0);
dates = t1:t2;

% Most "Controlled" Test set
% Data from Ministry of Health
Luxembourg = [0,0,0,0,0,1,1,1,1,1,2,2,3,3,3,3,4,17,38,56,56,88,195,343,478,644,762,783,1002,1175,1319,1519,1656,1728,1740,1876,1929,1958,1931,1891,1790,1708,1751,1619,1524,1444,1301,1167,1085,1058,984,929,840,784,709,650,625,583,536,486,450,414,408,405,410,355,329,304,257,241,248,231,207,201,180,165,152,148,138,126,118,108,109,106,113,104,101,96,100,94,86,86,87,81,75,74,70,60,59,47,41,34,35,27,26,29,29,28,27,26,29,29,34,39,37,41,43,53,52,64,62,72,84,123,149,151,193,213,258,298,320,359,358,406,445,494,516,552,588,585,669,678,789,844,875,947,928,987,1058,1082,1118,1209,1232,1198,1203,1247,1262,1197,1170,1150,1063,1083,1088,1030,987,952,864,800,780,790,709,672,630,566,524,536,538,515,520,540,506,486,510,561,570,552,564,587,574,592,615,616,607,590,593,583,587,608,598,614,607,606,564];
Lux_rebound = datetime('29-06-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

% Additional Test set
% Data: from John Hopkins University database

% State of Victoria (Australia) -> most representative, lower heterogeneity
Austria_cumulative = [ 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,2 ,2 ,3 ,3 ,9 ,14 ,18 ,21 ,29 ,41 ,55 ,79 ,104 ,131 ,182 ,246 ,302 ,504 ,655 ,860 ,1018 ,1332 ,1646 ,2013 ,2388 ,2814 ,3582 ,4474 ,5283 ,5588 ,6909 ,7657 ,8271 ,8788 ,9618 ,10180 ,10711 ,11129 ,11524 ,11781 ,12051 ,12297 ,12639 ,12942 ,13244 ,13555 ,13806 ,13945 ,14041 ,14226 ,14336 ,14476 ,14595 ,14671 ,14749 ,14795 ,14873 ,14925 ,15002 ,15071 ,15148 ,15225 ,15274 ,15357 ,15402 ,15452 ,15531 ,15558 ,15597 ,15621 ,15650 ,15684 ,15752 ,15774 ,15833 ,15871 ,15882 ,15961 ,15997 ,16058 ,16109 ,16201 ,16242 ,16269 ,16321 ,16353 ,16404 ,16436 ,16486 ,16503 ,16539 ,16557 ,16591 ,16628 ,16655 ,16685 ,16731 ,16733 ,16759 ,16771 ,16805 ,16843 ,16898 ,16902 ,16968 ,16979 ,17005 ,17034 ,17064 ,17078 ,17109 ,17135 ,17189 ,17203 ,17223 ,17271 ,17323 ,17341 ,17380 ,17408 ,17449 ,17477 ,17522 ,17580 ,17654 ,17723 ,17766 ,17873 ,17941 ,18050 ,18165 ,18280 ,18365 ,18421 ,18513 ,18615 ,18709 ,18783 ,18897 ,18948 ,19021 ,19154 ,19270 ,19439 ,19573 ,19655 ,19743 ,19827 ,19929 ,20099 ,20214 ,20338 ,20472 ,20558 ,20677 ,20850 ,20955 ,21130 ,21212 ,21304 ,21385 ,21481 ,21566 ,21696 ,21837 ,21919 ,22033 ,22106 ,22245 ,22439 ,22594 ,22876 ,23179 ,23370 ,23534 ,23829 ,24084 ,24431 ,24762 ,25062 ,25253 ,25495 ,25706 ,26033 ,26361 ,26590 ,26985 ,27166 ,27438 ,27642 ,27969 ,28372 ,28729 ,29087 ,29271 ,29561 ,30081 ,30583 ,31247 ,31827 ,32696 ,33159];
Austria_recovered = [0  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,2 ,4 ,4 ,4 ,6 ,6 ,6 ,6 ,1 ,9 ,9 ,9 ,9 ,9 ,9 ,9 ,9 ,112 ,225 ,225 ,479 ,636 ,1095 ,1436 ,1749 ,2022 ,2507 ,2998 ,3463 ,4046 ,4512 ,5240 ,6064 ,6604 ,6987 ,7343 ,7633 ,8098 ,8986 ,9704 ,10214 ,10501 ,10631 ,10971 ,11328 ,11694 ,11872 ,12103 ,12282 ,12362 ,12580 ,12779 ,12907 ,13110 ,13180 ,13228 ,13316 ,13462 ,13639 ,13698 ,13836 ,13928 ,13991 ,14061 ,14148 ,14304 ,14405 ,14471 ,14524 ,14563 ,14614 ,14678 ,14882 ,14951 ,15005 ,15037 ,15063 ,15138 ,15182 ,15228 ,15286 ,15347 ,15520 ,15593 ,15596 ,15629 ,15672 ,15717 ,15742 ,15789 ,15793 ,15839 ,15875 ,15910 ,15949 ,15985 ,16012 ,16059 ,16066 ,16089 ,16099 ,16101 ,16141 ,16175 ,16197 ,16241 ,16261 ,16282 ,16320 ,16348 ,16371 ,16401 ,16420 ,16478 ,16491 ,16514 ,16558 ,16607 ,16615 ,16647 ,16686 ,16721 ,16758 ,16808 ,16864 ,16952 ,17000 ,17073 ,17175 ,17244 ,17335 ,17501 ,17599 ,17659 ,17716 ,17849 ,17943 ,18042 ,18124 ,18209 ,18246 ,18379 ,18528 ,18628 ,18758 ,18911 ,18984 ,19063 ,19336 ,19464 ,19596 ,19690 ,19812 ,19923 ,20010 ,20123 ,20268 ,20346 ,20499 ,20627 ,20681 ,20765 ,20870 ,20958 ,21093 ,21260 ,21406 ,21558 ,21657 ,21888 ,22145 ,22317 ,22594 ,22866 ,23070 ,23226 ,23565 ,23820 ,24171 ,24513 ,24828 ,25043 ,25300 ,25629 ,25764 ,26043 ,26257 ,26579 ,26760];
Austria_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,3 ,3 ,4 ,6 ,6 ,8 ,16 ,21 ,28 ,30 ,49 ,58 ,68 ,86 ,108 ,128 ,146 ,158 ,168 ,186 ,204 ,220 ,243 ,273 ,295 ,319 ,337 ,350 ,368 ,384 ,393 ,410 ,431 ,443 ,452 ,470 ,491 ,510 ,522 ,530 ,536 ,542 ,549 ,569 ,580 ,584 ,589 ,596 ,598 ,600 ,606 ,608 ,609 ,614 ,615 ,618 ,620 ,623 ,624 ,626 ,628 ,629 ,629 ,629 ,632 ,633 ,633 ,635 ,639 ,640 ,641 ,643 ,645 ,668 ,668 ,668 ,668 ,668 ,669 ,670 ,670 ,672 ,672 ,672 ,672 ,672 ,673 ,674 ,675 ,677 ,677 ,678 ,681 ,687 ,688 ,688 ,688 ,690 ,690 ,693 ,693 ,698 ,698 ,700 ,702 ,703 ,705 ,705 ,705 ,705 ,705 ,706 ,706 ,706 ,706 ,706 ,706 ,706 ,708 ,708 ,709 ,710 ,711 ,711 ,711 ,711 ,711 ,710 ,711 ,711 ,711 ,712 ,712 ,713 ,713 ,716 ,718 ,718 ,718 ,718 ,718 ,719 ,719 ,719 ,720 ,721 ,721 ,723 ,723 ,724 ,725 ,725 ,728 ,728 ,729 ,729 ,729 ,729 ,730 ,732 ,732 ,733 ,733 ,733 ,733 ,733 ,733 ,733 ,733 ,734 ,734 ,735 ,735 ,735 ,736 ,746 ,747 ,747 ,748 ,750 ,754 ,756];
Austria = Austria_cumulative - Austria_recovered - Austria_dead;
Austria = Austria(34:end);
Austria_rebound = datetime('03-07-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Victoria_cumulative = [0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,2 ,3 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,7 ,7 ,9 ,9 ,10 ,10 ,10 ,11 ,11 ,15 ,18 ,21 ,21 ,36 ,49 ,57 ,71 ,94 ,121 ,121 ,121 ,229 ,355 ,355 ,411 ,466 ,520 ,574 ,685 ,769 ,821 ,917 ,968 ,1036 ,1085 ,1115 ,1135 ,1158 ,1191 ,1212 ,1228 ,1241 ,1265 ,1268 ,1281 ,1291 ,1299 ,1299 ,1302 ,1319 ,1328 ,1329 ,1336 ,1336 ,1337 ,1343 ,1346 ,1349 ,1349 ,1354 ,1361 ,1364 ,1371 ,1384 ,1406 ,1423 ,1440 ,1454 ,1467 ,1468 ,1487 ,1496 ,1511 ,1514 ,1521 ,1540 ,1551 ,1558 ,1564 ,1573 ,1573 ,1581 ,1593 ,1593 ,1603 ,1605 ,1610 ,1618 ,1628 ,1634 ,1645 ,1649 ,1653 ,1663 ,1670 ,1678 ,1681 ,1681 ,1685 ,1687 ,1687 ,1691 ,1699 ,1703 ,1703 ,1720 ,1732 ,1741 ,1762 ,1780 ,1792 ,1792 ,1836 ,1847 ,1864 ,1884 ,1917 ,1947 ,1947 ,2028 ,2099 ,2159 ,2231 ,2303 ,2368 ,2368 ,2536 ,2660 ,2824 ,2942 ,3098 ,3397 ,3560 ,3799 ,3967 ,4224 ,4448 ,4750 ,5165 ,5353 ,5696 ,5942 ,6289 ,6739 ,7125 ,7405 ,7744 ,8181 ,8696 ,9049 ,9304 ,9998 ,10577 ,10931 ,11557 ,11937 ,12335 ,13035 ,13469 ,13867 ,14283 ,14659 ,14957 ,15251 ,15646 ,15863 ,16234 ,16517 ,16764 ,17027 ,17238 ,17446 ,17683 ,17852 ,18029 ,18231 ,18330 ,18464 ,18608 ,18714 ,18822 ,18903 ,19015 ,19080 ,19138 ,19224 ,19336 ,19415 ,19479 ,19538 ,19574 ,19615 ,19688 ,19739 ,19767 ,19800 ,19835 ,19872];
Victoria_recovered = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,7 ,7 ,7 ,7 ,7 ,7 ,7 ,7 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,70 ,70 ,97 ,97 ,149 ,171 ,191 ,191 ,191 ,291 ,343 ,422 ,476 ,527 ,573 ,620 ,620 ,620 ,736 ,926 ,926 ,926 ,926 ,1118 ,1118 ,1137 ,1159 ,1172 ,1172 ,1196 ,1202 ,1243 ,1251 ,1254 ,1262 ,1265 ,1280 ,1287 ,1291 ,1293 ,1300 ,1300 ,1300 ,1311 ,1321 ,1322 ,1327 ,1327 ,1336 ,1346 ,1360 ,1385 ,1385 ,1407 ,1417 ,1417 ,1439 ,1454 ,1454 ,1473 ,1479 ,1479 ,1498 ,1520 ,1533 ,1533 ,1544 ,1544 ,1553 ,1557 ,1560 ,1563 ,1569 ,1569 ,1586 ,1586 ,1593 ,1595 ,1602 ,1616 ,1621 ,1632 ,1632 ,1657 ,1661 ,1664 ,1664 ,1678 ,1678 ,1680 ,1694 ,1701 ,1712 ,1721 ,1721 ,1742 ,1742 ,1775 ,1789 ,1816 ,1816 ,1866 ,1904 ,1904 ,1971 ,1992 ,2028 ,2058 ,2142 ,2142 ,2286 ,2289 ,2329 ,2395 ,2488 ,2591 ,2669 ,2709 ,2819 ,2933 ,2933 ,3078 ,3298 ,3298 ,3450 ,3529 ,3680 ,3817 ,4123 ,4123 ,4259 ,4479 ,4696 ,5111 ,5111 ,5283 ,5424 ,5628 ,6066 ,6378 ,6378 ,6642 ,6889 ,7271 ,7493 ,8121 ,8121 ,8570 ,9023 ,9413 ,9729 ,12334 ,12940 ,13239 ,13708 ,14077 ,14572 ,14572 ,14837 ,15101 ,15324 ,15580 ,15814 ,16152 ,16152 ,16370 ,16625 ,16784 ,16921 ,17056 ,17175 ,17311 ,17484 ,17771 ,17771 ,17893];
Victoria_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,3 ,3 ,3 ,4 ,4 ,4 ,4 ,5 ,7 ,8 ,8 ,10 ,11 ,12 ,12 ,13 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,14 ,16 ,16 ,16 ,17 ,17 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,18 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,19 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,20 ,22 ,22 ,22 ,22 ,22 ,23 ,24 ,24 ,24 ,27 ,29 ,32 ,34 ,38 ,39 ,42 ,44 ,49 ,55 ,61 ,71 ,77 ,83 ,92 ,105 ,112 ,116 ,123 ,136 ,147 ,162 ,170 ,181 ,193 ,210 ,228 ,246 ,267 ,275 ,289 ,293 ,309 ,334 ,351 ,363 ,376 ,385 ,398 ,415 ,430 ,438 ,462 ,485 ,496 ,513 ,524 ,565 ,570 ,576 ,591 ,650 ,661 ,666 ,675 ,683 ,694 ,701 ,710 ,716 ,723 ,729];
Victoria = Victoria_cumulative - Victoria_recovered - Victoria_dead;
Victoria = Victoria(34:end);
Victoria_rebound = datetime('29-06-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Korea_cumulative = [1,1,2,2,3,4,4,4,4,11,12,15,15,16,19,23,24,24,25,27,28,28,28,28,28,29,30,31,31,104,204,433,602,833,977,1261,1766,2337,3150,3736,4335,5186,5621,6088,6593,7041,7314,7478,7513,7755,7869,7979,8086,8162,8236,8320,8413,8565,8652,8799,8961,8961,9037,9137,9241,9332,9478,9583,9661,9786,9887,9976,10062,10156,10237,10284,10331,10384,10423,10450,10480,10512,10537,10564,10591,10613,10635,10653,10661,10674,10683,10694,10708,10718,10728,10738,10752,10761,10765,10774,10780,10793,10801,10804,10806,10810,10822,10840,10874,10909,10936,10962,10991,11018,11037,11050,11065,11078,11110,11122,11142,11165,11190,11206,11225,11265,11344,11402,11441,11468,11503,11541,11590,11629,11668,11719,11776,11814,11852,11902,11947,12003,12051,12085,12121,12155,12198,12257,12306,12373,12421,12438,12484,12535,12563,12602,12653,12715,12757,12800,12850,12904,12967,13030,13091,13137,13181,13244,13293,13338,13373,13417,13479,13512,13551,13612,13672,13711,13745,13771,13816,13879,13938,13979,14092,14150,14175,14203,14251,14269,14305,14336,14366,14389,14423,14456,14499,14519,14562,14598,14626,14660,14714,14770,14873,15039,15318,15515,15761,16058,16346,16670,17002,17399,17665,17945,18265,18706,19077,19400,19699,19947,20182,20449,20644,20842,21010,21177,21296,21432,21588,21743,21919,22055,22176,22285];
Korea_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,7,7,7,9,9,10,12,12,16,16,16,18,18,22,22,22,22,27,30,30,30,41,41,135,135,118,118,247,288,333,510,510,510,1137,1407,1540,1540,1540,1540,2909,2909,3507,3730,4144,4528,4811,5033,5228,5408,5567,5828,6021,6325,6463,6598,6694,6776,6973,7117,7243,7368,7447,7534,7616,7757,7829,7937,8042,8114,8213,8277,8501,8635,8717,8764,8854,8922,9059,9072,9123,9183,9217,9283,9333,9419,9484,9568,9610,9632,9670,9695,9762,9821,9851,9888,9904,9938,10066,10135,10162,10194,10213,10226,10275,10295,10340,10363,10398,10405,10422,10446,10467,10499,10506,10531,10552,10563,10589,10611,10654,10669,10691,10718,10730,10760,10774,10800,10835,10856,10868,10881,10908,10930,10974,11172,11317,11364,11429,11537,11613,11684,11759,11811,11832,11848,11914,11970,12019,12065,12144,12178,12204,12282,12348,12396,12460,12519,12556,12572,12643,12698,12758,12817,12866,12890,12905,13007,13069,13132,13183,13233,13259,13280,13352,13406,13501,13543,13629,13642,13658,13729,13786,13817,13863,13901,13910,13917,13934,14006,14063,14120,14169,14200,14219,14286,14368,14461,14551,14765,14903,14973,15198,15356,15529,15783,16009,16146,16297,16636,17023,17360,17616,18029,18226,18489];
Korea_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,6,8,10,12,13,13,16,17,28,28,35,35,42,44,50,53,54,60,66,66,72,75,75,81,84,91,94,102,111,111,120,126,131,139,144,152,158,162,165,169,174,177,183,186,192,200,204,208,211,214,217,222,225,229,230,232,234,236,237,238,240,240,242,243,244,246,247,248,250,250,252,254,255,256,256,256,256,256,258,259,260,260,262,262,263,263,263,264,264,266,266,267,269,269,269,269,269,270,271,272,273,273,273,273,273,273,274,276,276,277,277,277,277,278,279,280,280,280,280,280,281,281,282,282,282,282,282,282,282,282,282,283,283,284,285,285,287,288,288,289,289,289,289,291,293,294,295,296,296,297,297,298,298,298,299,300,300,300,301,301,301,301,301,302,302,303,304,305,305,305,305,305,305,305,305,305,306,306,307,309,309,309,309,310,312,313,316,321,323,324,324,326,329,331,333,334,336,341,344,346,350,355,358,363];
Korea = Korea_cumulative - Korea_recovered - Korea_dead;
Korea = Korea(34:end);
Korea_rebound = datetime('13-08-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Singapore_cumulative = [0,1,3,3,4,5,7,7,10,13,16,18,18,24,28,28,30,33,40,45,47,50,58,67,72,75,77,81,84,84,85,85,89,89,91,93,93,93,102,106,108,110,110,117,130,138,150,150,160,178,178,200,212,226,243,266,313,345,385,432,455,509,558,631,683,732,802,844,879,926,1000,1049,1114,1189,1309,1375,1481,1623,1910,2108,2299,2532,2918,3252,3699,4427,5050,5992,6588,8014,9125,10141,11178,12075,12693,13624,14423,14951,15641,16169,17101,17548,18205,18778,19410,20198,20939,21707,22460,23336,23822,24671,25346,26098,26891,27356,28038,28343,28794,29364,29812,30426,31068,31616,31960,32343,32876,33249,33860,34366,34884,35292,35836,36405,36922,37183,37527,37910,38296,38514,38965,39387,39850,40197,40604,40818,40969,41216,41473,41615,41833,42095,42313,42432,42623,42736,42955,43246,43459,43661,43907,44122,44310,44479,44664,44800,44983,45140,45298,45423,45614,45783,45961,46283,46630,46878,47126,47453,47655,47912,48035,48434,48744,49098,49375,49888,50369,50838,51197,51531,51809,52205,52512,52825,53051,53346,54254,54555,54797,54929,55104,55292,55353,55395,55497,55580,55661,55747,55838,55938,56031,56099,56216,56266,56353,56404,56435,56495,56572,56666,56717,56771,56812,56852,56860,56908,56948,56982,57022,57044,57091,57166,57229,57315,57357,57406];
Singapore_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,9,15,15,17,18,18,24,29,34,34,37,37,51,51,53,62,62,62,72,72,78,78,78,78,78,78,78,78,78,96,96,97,105,105,109,114,114,114,124,140,144,144,156,160,172,183,198,212,228,240,245,266,282,297,320,344,377,406,460,492,528,560,586,611,652,683,708,740,768,801,839,896,924,956,1002,1060,1095,1128,1188,1244,1268,1347,1408,1457,1519,1634,1712,2040,2296,2721,3225,3851,4809,5973,7248,8342,9340,9835,10365,11207,12117,12995,13882,14876,15738,16444,17276,18294,19631,20727,21699,22466,23175,23582,23904,24209,24559,24886,25368,25877,26532,27286,28040,28808,29589,30366,31163,31938,32712,33459,34224,34942,35590,35995,36299,36604,36825,37163,37508,37985,38500,39011,39429,39769,40117,40441,40717,41002,41323,41645,41780,42026,42285,42541,42737,42988,43256,43577,43833,44086,44371,44584,44795,45015,45172,45352,45521,45692,45893,46098,46308,46491,46740,46926,47179,47454,47768,48031,48312,48583,48915,49609,50128,50520,50736,51049,51521,51953,52350,52533,52810,53119,53651,53920,54164,54587,54816,54971,55139,55337,55447,55586,55658,55749,55891,56028,56174,56267,56333,56408,56461,56492,56558,56607,56699,56764];
Singapore_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,3,3,3,3,4,5,6,6,6,6,6,6,7,8,8,9,10,10,10,11,11,11,11,11,12,12,12,12,12,14,14,14,15,16,17,18,18,18,20,20,20,20,20,21,21,21,21,21,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27];
Singapore = Singapore_cumulative - Singapore_recovered - Singapore_dead;
Singapore = Singapore(34:end);
Singapore_rebound = datetime('25-07-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

% Active cases already. For data collection, see "../dati_regioni/italian_data.m"
Veneto = [32,42,69,109,149,189,261,271,297,345,380,454,505,623,694,783,940,1297,1453,1775,1989,2274,2488,2953,3169,3677,4214,4644,4986,5351,5745,6140,6648,6913,7251,7564,7850,8224,8578,8861,9093,9409,9722,9965,10171,10449,10647,10749,10729,10766,10736,10789,10800,10618,10444,10210,10061,10077,9991,9925,9679,9432,9138,8860,8601,8369,8147,7779,7431,7299,7234,7116,6789,6534,6187,5877,5591,5460,5190,5020,4718,4439,4162,4041,4004,3754,3532,3286,3023,2841,2660,2578,2431,2287,2025,1849,1612,1500,1468,1403,1387,1319,1229,1164,1085,1080,1004,965,922,849,778,772,755,718,680,607,582,575,583,585,564,549,527,487,482,460,462,462,418,397,390,388,388,384,385,386,392,394,398,408,412,427,438,455,502,525,567,609,624,643,657,685,705,722,734,754,784,891,1000,1001,1034,1051,1065,1067,1097,1215,1228,1240,1257,1300,1333,1385,1470,1560,1607,1634,1688,1661,1789,1865,1992,1989,2048,2119,2158,2221,2253,2345,2345,2387,2460,2556,2614,2780,2877,2939,2943,2914,2937,2926,2964,2940,2967];
Veneto_rebound = datetime('29-07-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');


% "Stress" set

Denmark_cumulative = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,3 ,4 ,4 ,6 ,10 ,10 ,23 ,23 ,35 ,90 ,262 ,442 ,615 ,801 ,827 ,864 ,914 ,977 ,1057 ,1151 ,1255 ,1326 ,1395 ,1450 ,1591 ,1724 ,1877 ,2046 ,2201 ,2395 ,2577 ,2860 ,3107 ,3386 ,3757 ,4077 ,4369 ,4681 ,5071 ,5402 ,5635 ,5819 ,5996 ,6174 ,6318 ,6511 ,6681 ,6879 ,7073 ,7242 ,7384 ,7515 ,7695 ,7912 ,8073 ,8210 ,8445 ,8575 ,8698 ,8851 ,9008 ,9158 ,9311 ,9407 ,9523 ,9670 ,9821 ,9938 ,10083 ,10218 ,10319 ,10429 ,10513 ,10591 ,10667 ,10713 ,10791 ,10858 ,10927 ,10968 ,11044 ,11117 ,11182 ,11230 ,11289 ,11360 ,11387 ,11428 ,11480 ,11512 ,11593 ,11633 ,11669 ,11699 ,11734 ,11771 ,11811 ,11875 ,11924 ,11948 ,11962 ,12001 ,12016 ,12035 ,12099 ,12139 ,12193 ,12217 ,12250 ,12294 ,12344 ,12391 ,12391 ,12391 ,12527 ,12561 ,12615 ,12636 ,12675 ,12675 ,12675 ,12751 ,12768 ,12794 ,12815 ,12832 ,12832 ,12832 ,12878 ,12888 ,12900 ,12916 ,12946 ,12946 ,12946 ,13037 ,13061 ,13092 ,13124 ,13173 ,13173 ,13173 ,13262 ,13302 ,13350 ,13390 ,13438 ,13438 ,13438 ,13547 ,13577 ,13634 ,13725 ,13789 ,13789 ,13789 ,13996 ,14073 ,14185 ,14306 ,14442 ,14442 ,14442 ,14815 ,14959 ,15070 ,15214 ,15379 ,15483 ,15617 ,15740 ,15855 ,15940 ,16056 ,16127 ,16239 ,16317 ,16397 ,16480 ,16537 ,16627 ,16700 ,16779 ,16891 ,16985 ,17084 ,17195 ,17374 ,17547 ,17736 ,17883 ,18113 ,18356 ,18607 ,18924 ,19216 ,19557 ,19890];
Denmark_recovered = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,894 ,1089 ,1193 ,1283 ,1327 ,1378 ,1491 ,1621 ,1736 ,1773 ,1955 ,2123 ,2235 ,2515 ,2748 ,3023 ,3389 ,3847 ,4141 ,4312 ,4700 ,5087 ,5384 ,5526 ,5669 ,5805 ,5959 ,6121 ,6366 ,6546 ,6729 ,6889 ,6987 ,7088 ,7296 ,7493 ,7711 ,7927 ,8093 ,8217 ,8328 ,8580 ,8663 ,8805 ,8959 ,9107 ,9227 ,9301 ,9416 ,9536 ,9643 ,9764 ,9836 ,9900 ,9964 ,10044 ,10106 ,10180 ,10240 ,10327 ,10362 ,10412 ,10489 ,10552 ,10620 ,10653 ,10721 ,10755 ,10792 ,10849 ,10904 ,10955 ,10993 ,11035 ,11068 ,11090 ,11125 ,11185 ,11242 ,11282 ,11282 ,11282 ,11347 ,11393 ,11422 ,11460 ,11508 ,11508 ,11508 ,11612 ,11649 ,11693 ,11769 ,11817 ,11817 ,11817 ,11935 ,11983 ,12001 ,12045 ,12077 ,12077 ,12077 ,12130 ,12160 ,12182 ,12195 ,12209 ,12209 ,12209 ,12251 ,12261 ,12274 ,12299 ,12340 ,12340 ,12340 ,12417 ,12451 ,12485 ,12526 ,12578 ,12578 ,12578 ,12682 ,12715 ,12753 ,12787 ,12840 ,12840 ,12840 ,12925 ,12988 ,13066 ,13131 ,13216 ,13275 ,13340 ,13417 ,13529 ,13651 ,13769 ,13944 ,13944 ,14180 ,14310 ,14465 ,14603 ,14763 ,14877 ,14989 ,15116 ,15205 ,15300 ,15413 ,15499 ,15586 ,15671 ,15760 ,15833 ,15907 ,15990 ,16069 ,16139 ,16247 ,16333];
Denmark_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,2 ,3 ,4 ,4 ,6 ,9 ,13 ,13 ,24 ,32 ,34 ,41 ,52 ,65 ,72 ,77 ,90 ,104 ,123 ,139 ,161 ,179 ,187 ,203 ,218 ,237 ,247 ,260 ,273 ,285 ,299 ,309 ,321 ,336 ,346 ,355 ,364 ,370 ,384 ,394 ,403 ,418 ,422 ,427 ,434 ,443 ,452 ,460 ,475 ,484 ,493 ,503 ,506 ,514 ,522 ,526 ,529 ,533 ,527 ,533 ,537 ,537 ,543 ,547 ,548 ,551 ,554 ,561 ,561 ,561 ,562 ,563 ,563 ,565 ,568 ,568 ,571 ,574 ,576 ,580 ,580 ,582 ,586 ,587 ,589 ,593 ,593 ,593 ,593 ,594 ,597 ,597 ,598 ,598 ,598 ,600 ,600 ,600 ,600 ,602 ,603 ,603 ,603 ,604 ,604 ,604 ,605 ,605 ,606 ,606 ,606 ,606 ,606 ,607 ,609 ,609 ,609 ,609 ,609 ,609 ,610 ,610 ,610 ,610 ,611 ,611 ,611 ,611 ,611 ,611 ,612 ,613 ,613 ,613 ,613 ,613 ,614 ,615 ,615 ,615 ,615 ,616 ,616 ,616 ,617 ,617 ,617 ,617 ,620 ,621 ,621 ,621 ,621 ,621 ,621 ,621 ,621 ,621 ,621 ,621 ,622 ,622 ,623 ,623 ,623 ,624 ,624 ,624 ,624 ,624 ,625 ,626 ,626 ,627 ,627 ,627 ,628 ,628 ,628 ,629 ,629 ,630 ,631];
Denmark = Denmark_cumulative - Denmark_recovered - Denmark_dead;
Denmark = Denmark(34:end);
Denmark_rebound = datetime('03-08-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Israel_cumulative = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,2 ,3 ,4 ,7 ,10 ,10 ,12 ,15 ,20 ,37 ,43 ,61 ,61 ,75 ,79 ,100 ,126 ,155 ,213 ,218 ,250 ,304 ,427 ,529 ,712 ,883 ,1071 ,1238 ,2369 ,2693 ,3035 ,3619 ,4247 ,4695 ,5358 ,6092 ,6857 ,7428 ,7851 ,8430 ,8904 ,9248 ,9404 ,9968 ,10408 ,10743 ,11145 ,11586 ,12046 ,12501 ,12758 ,12982 ,13265 ,13491 ,13713 ,13942 ,14498 ,14803 ,15058 ,15298 ,15443 ,15555 ,15728 ,15834 ,15946 ,16101 ,16185 ,16208 ,16246 ,16289 ,16310 ,16381 ,16436 ,16454 ,16477 ,16506 ,16529 ,16548 ,16579 ,16589 ,16608 ,16617 ,16643 ,16659 ,16667 ,16683 ,16690 ,16712 ,16717 ,16734 ,16757 ,16793 ,16872 ,16987 ,17012 ,17071 ,17169 ,17285 ,17377 ,17495 ,17562 ,17752 ,17863 ,18032 ,18180 ,18355 ,18569 ,18795 ,18972 ,19055 ,19237 ,19495 ,19783 ,20036 ,20339 ,20633 ,20778 ,21082 ,21512 ,22044 ,22400 ,22800 ,23421 ,23755 ,24441 ,25244 ,26257 ,27047 ,28055 ,29170 ,29958 ,30749 ,32222 ,33557 ,34825 ,36266 ,37464 ,38670 ,40632 ,42360 ,44188 ,46059 ,47459 ,49365 ,50289 ,52003 ,54042 ,56085 ,57982 ,59475 ,60678 ,61956 ,63985 ,66293 ,68299 ,70036 ,70970 ,72218 ,72815 ,74430 ,76198 ,77919 ,79559 ,80991 ,82324 ,83002 ,84722 ,86593 ,88151 ,89822 ,91080 ,92233 ,92680 ,94751 ,96409 ,97969 ,99599 ,100716 ,101933 ,102663 ,104472 ,106460 ,108403 ,110403 ,112000 ,113465 ,114020 ,116596 ,118538 ,121464 ,124455 ,126419 ,128936 ,130644 ,133975 ,137565 ,141097 ,145526 ,148564 ,152722 ,155604];
Israel_recovered = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,2 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,11 ,11 ,11 ,14 ,36 ,37 ,37 ,53 ,58 ,68 ,79 ,89 ,132 ,161 ,224 ,241 ,338 ,403 ,427 ,477 ,585 ,770 ,801 ,1011 ,1183 ,1341 ,1627 ,1855 ,2195 ,2563 ,2818 ,3126 ,3456 ,3754 ,4049 ,4507 ,5215 ,5611 ,6003 ,6435 ,6731 ,7200 ,7746 ,8233 ,8561 ,9156 ,9593 ,9749 ,10064 ,10465 ,10637 ,10873 ,11229 ,11376 ,11430 ,11843 ,12083 ,12232 ,12521 ,12587 ,12855 ,12942 ,13253 ,13435 ,13504 ,13724 ,13915 ,14090 ,14153 ,14307 ,14457 ,14570 ,14679 ,14776 ,14811 ,14812 ,14878 ,14940 ,14983 ,15013 ,15026 ,15042 ,15091 ,15102 ,15159 ,15168 ,15250 ,15288 ,15357 ,15375 ,15415 ,15449 ,15459 ,15518 ,15586 ,15586 ,15694 ,15761 ,15869 ,15940 ,16007 ,16872 ,17002 ,17074 ,17218 ,17341 ,17452 ,17547 ,17669 ,17816 ,17950 ,18056 ,18227 ,18338 ,18452 ,18613 ,18814 ,19008 ,19395 ,19665 ,19989 ,20370 ,20744 ,21348 ,21675 ,22154 ,22743 ,23310 ,24044 ,26797 ,26917 ,27025 ,27133 ,32182 ,32746 ,43489 ,43850 ,45102 ,45677 ,47571 ,49834 ,51395 ,53427 ,55313 ,57071 ,57533 ,58998 ,60080 ,62109 ,64746 ,66965 ,67950 ,68510 ,70291 ,71990 ,73092 ,74579 ,77785 ,78651 ,79514 ,81642 ,83822 ,86466 ,87726 ,91051 ,92104 ,92796 ,95009 ,96214 ,97234 ,98645 ,100357 ,101481 ,102477 ,105455 ,107003 ,108354 ,109942 ,111728 ,113496 ,114998];
Israel_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,3 ,5 ,8 ,12 ,12 ,15 ,16 ,20 ,26 ,36 ,40 ,44 ,49 ,57 ,65 ,73 ,86 ,95 ,101 ,103 ,116 ,123 ,130 ,142 ,151 ,164 ,172 ,177 ,184 ,189 ,192 ,194 ,199 ,201 ,204 ,210 ,215 ,222 ,225 ,229 ,232 ,235 ,238 ,239 ,240 ,245 ,247 ,252 ,258 ,260 ,264 ,265 ,266 ,268 ,272 ,276 ,278 ,279 ,279 ,279 ,279 ,279 ,281 ,281 ,281 ,284 ,284 ,284 ,285 ,285 ,290 ,291 ,291 ,291 ,295 ,298 ,298 ,299 ,299 ,300 ,300 ,300 ,300 ,302 ,302 ,303 ,303 ,304 ,305 ,306 ,307 ,308 ,308 ,309 ,314 ,317 ,318 ,319 ,320 ,322 ,324 ,326 ,330 ,331 ,334 ,342 ,344 ,348 ,351 ,354 ,362 ,365 ,371 ,376 ,384 ,392 ,401 ,409 ,415 ,425 ,430 ,442 ,448 ,457 ,470 ,474 ,486 ,491 ,500 ,512 ,526 ,536 ,546 ,561 ,565 ,576 ,581 ,593 ,600 ,613 ,622 ,639 ,651 ,665 ,674 ,685 ,692 ,708 ,781 ,795 ,809 ,819 ,834 ,847 ,859 ,875 ,884 ,894 ,906 ,919 ,939 ,957 ,969 ,985 ,993 ,1007 ,1019 ,1026 ,1040 ,1054 ,1077 ,1090 ,1103 ,1119];
Israel = Israel_cumulative - Israel_recovered - Israel_dead;
Israel = Israel(34:end);
Israel_rebound = datetime('29-05-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Japan_cumulative = [2 ,2 ,2 ,2 ,4 ,4 ,7 ,7 ,11 ,15 ,20 ,20 ,20 ,22 ,23 ,23 ,23 ,24 ,24 ,26 ,27 ,28 ,33 ,43 ,54 ,60 ,67 ,79 ,85 ,95 ,112 ,137 ,149 ,160 ,173 ,192 ,218 ,236 ,245 ,259 ,278 ,298 ,333 ,365 ,420 ,466 ,499 ,527 ,585 ,640 ,696 ,733 ,795 ,826 ,843 ,893 ,928 ,968 ,1022 ,1059 ,1104 ,1144 ,1217 ,1314 ,1416 ,1530 ,1728 ,1907 ,2001 ,2255 ,2535 ,2818 ,3154 ,3525 ,3876 ,4110 ,4485 ,5020 ,5614 ,6250 ,6951 ,7473 ,7773 ,8277 ,8835 ,9398 ,9958 ,10548 ,10914 ,11258 ,11641 ,12037 ,12469 ,12854 ,13186 ,13405 ,13576 ,13860 ,14076 ,14284 ,14558 ,14861 ,15061 ,15229 ,15354 ,15455 ,15553 ,15640 ,15755 ,15824 ,15861 ,15948 ,15998 ,16096 ,16148 ,16202 ,16226 ,16259 ,16287 ,16321 ,16362 ,16385 ,16410 ,16451 ,16472 ,16502 ,16528 ,16598 ,16673 ,16716 ,16751 ,16787 ,16837 ,16867 ,16911 ,16958 ,17000 ,17039 ,17060 ,17111 ,17146 ,17187 ,17250 ,17293 ,17369 ,17439 ,17484 ,17530 ,17588 ,17658 ,17725 ,17780 ,17820 ,17879 ,17963 ,18055 ,18162 ,18254 ,18366 ,18476 ,18615 ,18838 ,19055 ,19185 ,19461 ,19668 ,19848 ,20055 ,20261 ,20617 ,21044 ,21430 ,21841 ,22125 ,22437 ,23172 ,23510 ,24104 ,24946 ,25446 ,25706 ,26463 ,27136 ,28114 ,28883 ,29684 ,30548 ,31142 ,32116 ,33382 ,35144 ,36234 ,37804 ,39116 ,40099 ,41347 ,42686 ,44167 ,45764 ,47342 ,48782 ,49617 ,50302 ,51288 ,52471 ,53818 ,55051 ,56074 ,56717 ,57636 ,58728 ,59900 ,60949 ,61916 ,62658 ,63158 ,63888 ,64779 ,65653 ,66499 ,67353 ,67958 ,68396 ,69023 ,69619 ,70278 ,70866 ,71467 ,71918 ,72213 ,72724 ,73264 ,73916 ,74558 ,75206 ,75646];
Japan_recovered = [0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,4 ,9 ,9 ,9 ,9 ,12 ,12 ,12 ,13 ,18 ,18 ,22 ,22 ,22 ,22 ,22 ,22 ,22 ,22 ,32 ,32 ,32 ,43 ,43 ,43 ,46 ,76 ,76 ,76 ,101 ,118 ,118 ,118 ,118 ,118 ,144 ,144 ,144 ,150 ,191 ,232 ,235 ,235 ,285 ,310 ,359 ,372 ,404 ,424 ,424 ,424 ,472 ,472 ,514 ,514 ,514 ,575 ,592 ,622 ,632 ,685 ,762 ,762 ,784 ,799 ,853 ,901 ,935 ,1069 ,1159 ,1159 ,1239 ,1356 ,1494 ,1530 ,1656 ,1809 ,1899 ,1899 ,2368 ,2460 ,2975 ,3205 ,3981 ,4156 ,4496 ,4496 ,4918 ,5146 ,5906 ,8127 ,8293 ,8531 ,8920 ,9868 ,10338 ,10338 ,11153 ,11564 ,11564 ,11564 ,12672 ,13005 ,13244 ,13413 ,13612 ,13810 ,13973 ,14096 ,14213 ,14267 ,14342 ,14463 ,14585 ,14702 ,14785 ,14925 ,14927 ,14990 ,15043 ,15141 ,15217 ,15233 ,15362 ,15458 ,15514 ,15567 ,15652 ,15753 ,15753 ,15844 ,15948 ,15948 ,15957 ,16096 ,16101 ,16142 ,16224 ,16293 ,16327 ,16388 ,16458 ,16563 ,16615 ,16721 ,16832 ,16870 ,17007 ,17057 ,17057 ,17412 ,17494 ,17494 ,17845 ,18058 ,18126 ,18126 ,18641 ,18944 ,19211 ,19211 ,19603 ,20001 ,20482 ,20878 ,21173 ,21464 ,21606 ,21970 ,22636 ,23351 ,24024 ,24774 ,25347 ,25748 ,26476 ,27187 ,28020 ,28858 ,30241 ,31248 ,32867 ,33450 ,34136 ,34969 ,36191 ,35498 ,39439 ,40560 ,41591 ,42965 ,43786 ,45110 ,46264 ,47418 ,48319 ,49089 ,50092 ,51407 ,52542 ,53691 ,54883 ,55700 ,56338 ,57503 ,58108 ,58200 ,60093 ,61099 ,61730 ,62190 ,62936 ,63734 ,64489 ,65244 ,65934 ,66524];
Japan_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,3 ,3 ,4 ,5 ,6 ,6 ,6 ,6 ,7 ,7 ,7 ,7 ,8 ,10 ,13 ,15 ,19 ,21 ,22 ,24 ,30 ,30 ,32 ,33 ,34 ,36 ,40 ,41 ,42 ,45 ,47 ,53 ,56 ,63 ,65 ,67 ,72 ,75 ,81 ,87 ,93 ,96 ,98 ,105 ,113 ,125 ,138 ,147 ,156 ,170 ,186 ,204 ,217 ,236 ,255 ,275 ,303 ,323 ,351 ,360 ,379 ,395 ,417 ,436 ,454 ,481 ,510 ,536 ,560 ,582 ,593 ,605 ,617 ,634 ,654 ,666 ,685 ,707 ,726 ,742 ,760 ,778 ,787 ,796 ,805 ,818 ,826 ,836 ,845 ,852 ,857 ,863 ,870 ,881 ,887 ,894 ,898 ,899 ,902 ,905 ,911 ,916 ,915 ,917 ,920 ,920 ,922 ,922 ,924 ,927 ,927 ,929 ,934 ,935 ,935 ,951 ,955 ,955 ,955 ,965 ,967 ,971 ,971 ,971 ,972 ,972 ,972 ,976 ,977 ,977 ,977 ,977 ,978 ,981 ,982 ,982 ,982 ,982 ,983 ,984 ,984 ,984 ,985 ,985 ,986 ,986 ,988 ,988 ,990 ,992 ,994 ,996 ,998 ,998 ,1001 ,1001 ,1007 ,1008 ,1012 ,1013 ,1018 ,1023 ,1028 ,1034 ,1042 ,1042 ,1047 ,1052 ,1058 ,1066 ,1073 ,1080 ,1093 ,1103 ,1112 ,1135 ,1148 ,1157 ,1175 ,1179 ,1188 ,1201 ,1219 ,1230 ,1241 ,1251 ,1271 ,1285 ,1298 ,1313 ,1327 ,1334 ,1352 ,1361 ,1366 ,1377 ,1398 ,1412 ,1416 ,1428 ,1441 ,1448];
Japan = Japan_cumulative - Japan_recovered - Japan_dead;
Japan = Japan(34:end);
Japan_rebound = datetime('28-06-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

Nepal_cumulative = [0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,3 ,3 ,4 ,5 ,5 ,5 ,5 ,5 ,6 ,6 ,9 ,9 ,9 ,9 ,9 ,9 ,9 ,9 ,12 ,14 ,16 ,16 ,16 ,30 ,31 ,31 ,31 ,43 ,45 ,48 ,49 ,49 ,52 ,52 ,54 ,57 ,57 ,59 ,59 ,75 ,75 ,82 ,99 ,101 ,102 ,110 ,110 ,134 ,217 ,250 ,249 ,267 ,291 ,295 ,375 ,402 ,427 ,457 ,516 ,584 ,603 ,682 ,772 ,886 ,1042 ,1212 ,1401 ,1572 ,1811 ,2099 ,2300 ,2634 ,2912 ,3235 ,3448 ,3762 ,4086 ,4364 ,4614 ,5062 ,5335 ,5760 ,6211 ,6591 ,7177 ,7848 ,8274 ,8605 ,9026 ,9561 ,10099 ,10728 ,11162 ,11755 ,12309 ,12772 ,13248 ,13564 ,14046 ,14519 ,15259 ,15491 ,15784 ,15964 ,16168 ,16423 ,16531 ,16649 ,16719 ,16801 ,16945 ,17061 ,17177 ,17344 ,17445 ,17502 ,17658 ,17844 ,17994 ,18094 ,18241 ,18374 ,18483 ,18613 ,18752 ,19063 ,19273 ,19547 ,19771 ,20086 ,20332 ,20750 ,21009 ,21390 ,21750 ,22214 ,22592 ,22972 ,23310 ,23948 ,24432 ,24957 ,25551 ,26019 ,26660 ,27241 ,28257 ,28938 ,29645 ,30483 ,31117 ,31935 ,32678 ,33533 ,34418 ,35529 ,36456 ,37340 ,38561 ,39460 ,40529 ,41649 ,42877 ,44236 ,45277 ,46257 ,47236 ,48138 ,49219 ,50465 ,51919 ,53120 ,54159];
Nepal_recovered = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,4 ,4 ,4 ,7 ,10 ,11 ,12 ,16 ,16 ,16 ,16 ,16 ,16 ,16 ,16 ,16 ,16 ,22 ,22 ,31 ,31 ,31 ,33 ,33 ,35 ,35 ,36 ,36 ,36 ,36 ,37 ,45 ,49 ,70 ,70 ,87 ,112 ,155 ,183 ,187 ,206 ,219 ,220 ,221 ,266 ,278 ,290 ,333 ,365 ,467 ,488 ,584 ,674 ,861 ,877 ,913 ,974 ,1041 ,1158 ,1167 ,1186 ,1402 ,1578 ,1772 ,2148 ,2224 ,2338 ,2650 ,2698 ,2834 ,3013 ,3134 ,3194 ,4656 ,5320 ,6143 ,6415 ,6547 ,6811 ,7499 ,7752 ,7891 ,8011 ,8442 ,8589 ,10294 ,10328 ,11025 ,11249 ,11534 ,11637 ,11695 ,11868 ,12477 ,12684 ,12840 ,12947 ,13053 ,13128 ,13754 ,13875 ,14021 ,14248 ,14399 ,14492 ,14603 ,14961 ,15026 ,15156 ,15389 ,15814 ,16313 ,16353 ,16493 ,16664 ,16728 ,16837 ,17077 ,17201 ,17335 ,17495 ,17580 ,17700 ,17964 ,18214 ,18350 ,18631 ,18806 ,19119 ,19504 ,20073 ,20242 ,20555 ,20822 ,21410 ,22178 ,23290 ,24207 ,25561 ,27127 ,28941 ,30677 ,32964 ,33882 ,35700 ,36672 ,37524 ,38697];
Nepal_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,2 ,2 ,2 ,2 ,3 ,3 ,3 ,3 ,4 ,4 ,4 ,5 ,6 ,6 ,8 ,8 ,8 ,9 ,10 ,11 ,13 ,13 ,14 ,15 ,15 ,15 ,16 ,18 ,19 ,19 ,19 ,20 ,22 ,22 ,22 ,23 ,23 ,24 ,24 ,26 ,27 ,28 ,28 ,29 ,29 ,30 ,31 ,32 ,34 ,34 ,35 ,35 ,35 ,35 ,35 ,38 ,38 ,38 ,38 ,39 ,39 ,40 ,40 ,40 ,40 ,40 ,42 ,43 ,44 ,45 ,45 ,48 ,49 ,49 ,52 ,56 ,56 ,57 ,57 ,58 ,60 ,65 ,70 ,73 ,75 ,79 ,83 ,91 ,95 ,99 ,102 ,104 ,107 ,114 ,120 ,126 ,137 ,146 ,149 ,157 ,164 ,175 ,183 ,195 ,207 ,221 ,228 ,239 ,251 ,257 ,271 ,280 ,289 ,300 ,306 ,312 ,317 ,322 ,336 ,345];
Nepal = Nepal_cumulative - Nepal_recovered - Nepal_dead;
Nepal = Nepal(34:end);
Nepal_rebound = datetime('29-07-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

% Data matrix
country_names = ["AUS","AUT","DNK","ISR","JPN","KOR","LUX","NPL","SPG","VEN"];
data_matrix = [Victoria;Austria;Denmark;Israel;Japan;Korea;Luxembourg;Nepal;Singapore;Veneto];
rebound_vector = [Victoria_rebound;Austria_rebound;Denmark_rebound;Israel_rebound;Japan_rebound;Korea_rebound;Lux_rebound;Nepal_rebound;Singapore_rebound;Veneto_rebound];

%% Non-chosen countries

% Active cases do not display SEIR-like behavior [most likely due to data management]
France_cumulative = [2 ,3 ,3 ,3 ,4 ,5 ,5 ,5 ,6 ,6 ,6 ,6 ,6 ,6 ,6 ,11 ,11 ,11 ,11 ,11 ,11 ,11 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,14 ,18 ,38 ,57 ,100 ,130 ,191 ,204 ,285 ,377 ,653 ,949 ,1126 ,1209 ,1784 ,2281 ,2281 ,3661 ,4469 ,4499 ,6633 ,7652 ,9043 ,10871 ,12612 ,14282 ,16018 ,19856 ,22304 ,25233 ,29155 ,32964 ,37575 ,40174 ,44550 ,52128 ,56989 ,59105 ,64338 ,68605 ,70478 ,74390 ,78167 ,82048 ,86334 ,90676 ,93790 ,120633 ,124298 ,129257 ,132473 ,144944 ,146923 ,146906 ,151808 ,154188 ,156921 ,154715 ,157026 ,158636 ,160292 ,160847 ,164589 ,167605 ,165093 ,165764 ,165764 ,166976 ,167272 ,167886 ,168935 ,172465 ,173040 ,174318 ,174758 ,175027 ,175479 ,176207 ,175981 ,176712 ,177319 ,177207 ,177240 ,177554 ,178428 ,179069 ,179306 ,179645 ,179964 ,179859 ,180166 ,179887 ,180044 ,183309 ,183816 ,185616 ,185851 ,185952 ,185112 ,185440 ,186118 ,186670 ,187199 ,187492 ,187590 ,187925 ,188322 ,188680 ,189244 ,189637 ,189928 ,189996 ,190223 ,190534 ,190735 ,191304 ,191740 ,191745 ,192070 ,192452 ,192265 ,192010 ,193346 ,193152 ,192429 ,194109 ,194373 ,194985 ,195458 ,195904 ,195546 ,195535 ,196748 ,197089 ,196796 ,197964 ,198450 ,198199 ,198183 ,199571 ,199509 ,200338 ,200739 ,201448 ,201285 ,201281 ,203242 ,203696 ,204641 ,205476 ,206418 ,206334 ,206334 ,208665 ,209342 ,209211 ,210465 ,213093 ,213031 ,213028 ,212884 ,216193 ,216106 ,218763 ,222477 ,222408 ,222402 ,226384 ,226313 ,230874 ,230778 ,236114 ,239345 ,239306 ,242650 ,242592 ,242538 ,242413 ,257333 ,260873 ,265550 ,267392 ,270455 ,275640 ,281603 ,288655 ,288531 ,299320 ,302175 ,306951 ,313730 ,320656 ,329512 ,329353 ,329246 ,348982 ,355244 ,363751 ,372501 ,381907 ,381907 ,381907];
France_recovered = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,2 ,2 ,2 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,11 ,11 ,11 ,11 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,12 ,2200 ,2200 ,3243 ,3900 ,4948 ,5700 ,5700 ,7202 ,7927 ,9444 ,10934 ,12428 ,14008 ,15438 ,16183 ,17250 ,19337 ,21254 ,23206 ,24932 ,26391 ,27186 ,27718 ,28512 ,30440 ,32297 ,33834 ,35379 ,35973 ,36782 ,38543 ,39988 ,41414 ,42715 ,43816 ,44125 ,44733 ,45997 ,47338 ,48572 ,49300 ,49751 ,49973 ,50438 ,51803 ,53022 ,54076 ,54770 ,54886 ,55062 ,55569 ,56617 ,57368 ,58300 ,59143 ,59142 ,59907 ,60416 ,61246 ,61713 ,62216 ,62557 ,62893 ,62961 ,63542 ,64222 ,64503 ,65098 ,65599 ,66051 ,66123 ,66120 ,66485 ,67031 ,67510 ,68007 ,68282 ,68283 ,68319 ,68736 ,69032 ,69344 ,69578 ,69783 ,69820 ,69719 ,69943 ,70223 ,70322 ,70496 ,70641 ,70661 ,70737 ,70952 ,71138 ,71322 ,71550 ,71455 ,71455 ,71595 ,71714 ,71879 ,72054 ,72181 ,72092 ,72092 ,72233 ,72363 ,72133 ,72408 ,72396 ,72200 ,72200 ,72180 ,71918 ,71774 ,71910 ,71979 ,71639 ,71639 ,71494 ,71382 ,71238 ,71618 ,71811 ,71566 ,71566 ,71497 ,71667 ,71597 ,71643 ,71656 ,71511 ,71511 ,71258 ,71152 ,71484 ,71613 ,71766 ,71585 ,71585 ,71537 ,71454 ,71906 ,71730 ,72023 ,71971 ,71971 ,72072 ,72003 ,71945 ,71868 ,72535 ,72600 ,72623 ,72793 ,73082 ,73020 ,73433 ,73501 ,73279 ,73279 ,73537 ,73727 ,73946 ,74156 ,74377 ,73866 ,73866 ,74223 ,74569 ,74867 ,74991 ,75308 ,75308 ,75308];
France_dead = [0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,2 ,2 ,3 ,4 ,4 ,6 ,9 ,11 ,19 ,19 ,33 ,48 ,48 ,79 ,91 ,91 ,148 ,148 ,148 ,243 ,450 ,562 ,674 ,860 ,1100 ,1331 ,1696 ,1995 ,2314 ,2606 ,3024 ,3523 ,4403 ,5387 ,6507 ,7560 ,8078 ,8911 ,10328 ,10869 ,12210 ,13197 ,13832 ,14393 ,14967 ,15712 ,17148 ,17901 ,18661 ,19303 ,19694 ,20240 ,20765 ,21309 ,21825 ,22214 ,22583 ,22825 ,23262 ,23629 ,24056 ,24345 ,24563 ,24729 ,24864 ,25168 ,25498 ,25772 ,25949 ,26192 ,26271 ,26341 ,26604 ,26951 ,27032 ,27381 ,27485 ,27483 ,28062 ,28193 ,27976 ,28084 ,28167 ,28241 ,28284 ,28317 ,28407 ,28480 ,28546 ,28611 ,28663 ,28720 ,28751 ,28779 ,28886 ,28967 ,29010 ,29056 ,29087 ,29100 ,29153 ,29237 ,29260 ,29287 ,29315 ,29339 ,29346 ,29375 ,29484 ,29512 ,29540 ,29554 ,29568 ,29574 ,29595 ,29652 ,29661 ,29680 ,29705 ,29704 ,29704 ,29736 ,29763 ,29780 ,29794 ,29812 ,29812 ,29813 ,29836 ,29847 ,29846 ,29889 ,29912 ,29909 ,29909 ,29931 ,29929 ,30018 ,30035 ,30049 ,30046 ,30046 ,30069 ,30056 ,30063 ,30072 ,30081 ,30081 ,30081 ,30096 ,30109 ,30108 ,30123 ,30150 ,30150 ,30150 ,30149 ,30177 ,30174 ,30185 ,30203 ,30202 ,30202 ,30201 ,30201 ,30247 ,30263 ,30279 ,30279 ,30279 ,30302 ,30301 ,30300 ,30300 ,30373 ,30381 ,30382 ,30396 ,30412 ,30412 ,30441 ,30460 ,30460 ,30470 ,30495 ,30518 ,30539 ,30559 ,30576 ,30575 ,30573 ,30575 ,30613 ,30643 ,30656 ,30735 ,30735 ,30735];
France = France_cumulative - France_recovered - France_dead;

Belgium_cumulative = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,8,13,23,50,109,169,200,239,267,314,314,559,689,886,1058,1243,1486,1795,2257,2815,3401,3743,4269,4937,6235,7284,9134,10836,11899,12775,13964,15348,16770,18431,19691,20814,22194,23403,24983,26667,28018,29647,30589,31119,33573,34809,36138,37183,38496,39983,40956,41889,42797,44293,45325,46134,46687,47334,47859,48519,49032,49517,49906,50267,50509,50781,51420,52011,52596,53081,53449,53779,53981,54288,54644,54989,55280,55559,55791,55983,56235,56511,56810,57092,57342,57455,57592,57849,58061,58186,58381,58517,58615,58685,58767,58907,59072,59226,59348,59437,59569,59711,59819,59918,60029,60100,60155,60244,60348,60476,60550,60550,60550,60810,60898,61007,61106,61209,61295,61361,61427,61509,61598,61727,61838,62016,62058,62058,62123,62210,62357,62469,62707,62707,62781,62872,63238,63499,63706,63706,64094,64258,64627,64847,65199,65727,66026,66428,66662,67335,68006,68751,69402,69849,70314,70648,71158,72016,72784,73401,74152,74620,75008,75647,76191,77113,77869,78323,78534,78897,79479,80178,80894,81468,81936,82092,82447,83030,83500,83952,84599,85042,85236,85487,85911,86544,87174,87825,88367,88769,89141,89691,90568,91537,92478,93455];
Belgium_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,31,31,1,263,263,263,461,547,675,858,1063,1359,1527,1696,2132,2495,2872,3247,3751,3986,4157,4681,5164,5568,5986,6463,6707,6868,7107,7562,7961,8348,8757,8895,9002,9433,9800,10122,10417,10785,10878,10943,11283,11576,11892,12211,12309,12378,12441,12731,12980,13201,13411,13642,13697,13732,13937,14111,14301,14460,14630,14657,14687,14847,14988,15123,15155,15272,15297,15320,15465,15572,15682,15769,15887,15919,15934,15959,16048,16112,16190,16291,16315,16324,16392,16453,16498,16547,16589,16610,16625,16684,16724,16751,16771,16771,16771,16771,16771,16890,16918,16941,16941,16941,16984,17021,17044,17073,17091,17091,17091,17122,17138,17159,17179,17196,17196,17196,17223,17242,17253,17289,17289,17289,17321,17330,17347,17369,17394,17425,17438,17452,17476,17491,17513,17546,17573,17590,17598,17639,17661,17700,17728,17766,17780,17792,17841,17883,17913,17941,17981,17994,18003,18048,18078,18131,18165,18204,18225,18242,18291,18331,18360,18360,18403,18415,18422,18457,18490,18513,18534,18555,18565,18576,18602,18635,18659,18689,18709,18723];
Belgium_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,4,5,10,14,21,37,67,75,88,122,178,220,289,353,431,513,705,828,1011,1143,1283,1447,1632,2035,2240,2523,3019,3346,3600,3903,4157,4440,4857,5163,5453,5683,5828,5998,6262,6490,6679,6917,7094,7207,7331,7501,7594,7703,7765,7844,7924,8016,8339,8415,8521,8581,8656,8707,8761,8843,8903,8959,9005,9052,9080,9108,9150,9186,9212,9237,9280,9312,9334,9364,9388,9430,9453,9467,9486,9505,9522,9548,9566,9580,9595,9606,9619,9629,9636,9646,9650,9655,9661,9663,9675,9683,9695,9696,9696,9696,9713,9722,9726,9731,9732,9732,9732,9747,9754,9761,9765,9771,9771,9774,9774,9776,9778,9781,9782,9782,9782,9787,9788,9795,9800,9800,9800,9805,9805,9808,9812,9817,9821,9821,9822,9833,9836,9840,9841,9845,9845,9850,9852,9859,9861,9866,9870,9872,9879,9885,9900,9916,9924,9935,9939,9944,9959,9969,9976,9985,9988,9992,9996,9996,9879,9884,9886,9891,9894,9895,9897,9898,9899,9901,9906,9907,9909,9912,9917,9917,9919,9923,9925];
Belgium = Belgium_cumulative - Belgium_recovered - Belgium_dead;

% Netherlands_cumulative = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,6,10,18,24,38,82,128,188,265,321,382,503,503,804,959,1135,1413,1705,2051,2460,2994,3631,4204,4749,5560,6412,7431,8603,9762,10866,11750,12595,13614,14697,15723,16627,17851,18803,19580,20549,21762,23097,24413,25587,26551,27419,28153,29214,30449,31589,32655,33405,34134,34842,35729,36535,37190,37845,38245,38416,38802,39316,39791,40236,40571,40770,41087,41319,41774,42093,42382,42627,42788,42984,43211,43481,43681,43870,43995,44141,44249,44447,44700,44888,45064,45236,45445,45578,45768,45950,46126,46257,46442,46545,46647,46733,46942,47152,47335,47574,47739,47903,48087,48251,48461,48640,48783,48948,49087,49204,49319,49426,49502,49593,49658,49722,49804,49914,50005,50074,50147,50223,50273,50335,50412,50487,50548,50621,50657,50694,50746,50798,50840,50921,51022,51093,51146,51252,51351,51454,51581,51725,51910,52073,52241,52404,52595,52732,53005,53151,53374,53621,53963,54301,54732,55098,55470,55955,56381,56982,57501,57987,58564,59194,59424,60627,61204,61840,62495,63002,63484,63973,64525,65054,65589,66097,66554,67128,67543,68114,68624,69131,69632,70140,70667,71129,71863,72464,73208,73862,74787,75584,76548,77688,78511,79781,81012,82099];
% Netherlands_recovered = zeros(1,236);
% Netherlands_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,4,5,5,10,12,20,24,43,58,76,106,136,179,213,276,356,434,546,639,771,864,1039,1173,1339,1487,1651,1766,1867,2101,2248,2396,2511,2643,2737,2823,2945,3134,3315,3459,3601,3684,3751,3916,4054,4177,4289,4409,4475,4518,4566,4711,4795,4893,4987,5056,5082,5168,5204,5288,5359,5422,5440,5456,5510,5562,5590,5643,5670,5680,5694,5715,5748,5775,5788,5811,5822,5830,5856,5871,5903,5931,5951,5956,5962,5967,5977,5990,6005,6011,6013,6016,6031,6042,6044,6053,6057,6059,6065,6070,6074,6078,6081,6089,6090,6090,6095,6097,6100,6103,6105,6105,6107,6113,6115,6118,6120,6126,6127,6128,6132,6135,6137,6136,6137,6137,6137,6135,6136,6137,6138,6136,6136,6136,6136,6139,6139,6139,6140,6159,6141,6145,6147,6147,6147,6148,6149,6149,6150,6153,6153,6154,6157,6157,6157,6141,6161,6165,6167,6169,6172,6172,6175,6181,6191,6195,6200,6200,6202,6207,6215,6218,6220,6224,6224,6224,6230,6235,6235,6237,6241,6243,6243,6244,6246,6249,6252,6253,6254];
% Netherlands = Netherlands_cumulative - Netherlands_recovered - Netherlands_dead;

% Switzerland_cumulative = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,8,8,18,27,42,56,90,114,214,268,337,374,491,652,652,1139,1359,2200,2200,2700,3028,4075,5294,6575,7474,8795,9877,10897,11811,12928,14076,14829,15922,16605,17768,18827,19606,20505,21100,21657,22253,23280,24051,24551,25107,25415,25688,25936,26336,26732,27078,27404,27740,27944,28063,28268,28496,28677,28894,29061,29164,29264,29407,29586,29705,29817,29905,29981,30009,30060,30126,30207,30251,30305,30344,30380,30413,30463,30514,30572,30587,30597,30618,30658,30694,30707,30725,30736,30746,30761,30776,30796,30828,30845,30862,30871,30874,30893,30913,30936,30956,30965,30972,30988,31011,31044,31063,31094,31117,31131,31154,31187,31200,31235,31243,31292,31310,31332,31376,31428,31486,31555,31617,31652,31714,31851,31967,32101,32198,32268,32315,32369,32498,32586,32690,32817,32883,32946,33016,33148,33290,33382,33492,33591,33634,33742,33883,34000,34154,34302,34412,34477,34609,34802,35022,35232,35412,35550,35616,35746,35927,36108,36269,36451,36603,36708,36895,37169,37403,37671,37924,38124,38252,38449,38760,39026,39332,39627,39903,40060,40262,40645,41006,41346,41722,42014,42177,42393,42763,43127,43532,43957,44401,44592,44837,45306,45711,46239,46704,47179];
% Switzerland_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,7,7,7,9,9,10,12,12,16,16,16,18,18,22,22,22,22,27,30,30,30,41,41,135,135,118,118,247,288,333,510,510,510,1137,1407,1540,1540,1540,1540,2909,2909,3507,3730,4144,4528,4811,5033,5228,5408,5567,5828,6021,6325,6463,6598,6694,6776,6973,7117,7243,7368,7447,7534,7616,7757,7829,7937,8042,8114,8213,8277,8501,8635,8717,8764,8854,8922,9059,9072,9123,9183,9217,9283,9333,9419,9484,9568,9610,9632,9670,9695,9762,9821,9851,9888,9904,9938,10066,10135,10162,10194,10213,10226,10275,10295,10340,10363,10398,10405,10422,10446,10467,10499,10506,10531,10552,10563,10589,10611,10654,10669,10691,10718,10730,10760,10774,10800,10835,10856,10868,10881,10908,10930,10974,11172,11317,11364,11429,11537,11613,11684,11759,11811,11832,11848,11914,11970,12019,12065,12144,12178,12204,12282,12348,12396,12460,12519,12556,12572,12643,12698,12758,12817,12866,12890,12905,13007,13069,13132,13183,13233,13259,13280,13352,13406,13501,13543,13629,13642,13658,13729,13786,13817,13863,13901,13910,13917,13934,14006,14063,14120,14169,14200,14219,14286,14368,14461,14551,14765,14903,14973,15198,15356,15529,15783,16009,16146,16297,16636,17023,17360,17616,18029,18226,18489];
% Switzerland_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,11,13,14,14,27,28,41,54,75,98,120,122,153,191,231,264,300,359,433,488,536,591,666,715,765,821,895,948,1002,1036,1106,1138,1174,1239,1281,1327,1368,1393,1429,1478,1509,1549,1589,1599,1610,1665,1699,1716,1737,1754,1762,1762,1784,1795,1805,1810,1823,1830,1833,1845,1867,1870,1872,1878,1879,1881,1886,1891,1892,1898,1903,1905,1906,1913,1915,1917,1919,1919,1919,1920,1920,1920,1921,1921,1921,1921,1921,1923,1934,1936,1937,1938,1938,1938,1939,1954,1956,1956,1956,1956,1956,1956,1956,1958,1958,1962,1962,1962,1962,1963,1965,1965,1965,1965,1965,1965,1966,1966,1966,1966,1968,1968,1968,1968,1968,1969,1969,1969,1969,1971,1972,1972,1975,1977,1977,1977,1978,1978,1979,1980,1981,1981,1981,1981,1981,1984,1985,1986,1986,1986,1987,1990,1991,1991,1991,1991,1991,1991,1992,1996,1998,2000,2000,2001,2001,2002,2003,2003,2004,2005,2005,2006,2011,2011,2013,2013,2013,2013,2014,2018,2019,2020,2020,2020,2021];
% Switzerland = Switzerland_cumulative - Switzerland_recovered - Switzerland_dead;
% Switzerland_rebound = datetime('13-08-2020 08:00:00','InputFormat','dd-MM-yyyy hh:mm:ss');

% Serbia_cumulative = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,12,19,35,46,48,55,65,83,103,135,171,222,249,303,384,384,457,659,741,785,900,1060,1171,1476,1624,1908,2200,2447,2666,2867,3105,3380,3630,4054,4465,4873,5318,5690,5994,6318,6630,6890,7144,7276,7483,7779,8042,8275,8497,8724,9009,9009,9362,9464,9557,9677,9791,9848,9943,10032,10032,10176,10243,10295,10374,10438,10496,10610,10699,10733,10833,10919,11024,11092,11159,11193,11227,11275,11300,11354,11381,11412,11430,11454,11523,11571,11667,11741,11823,11896,11965,12031,12102,12175,12251,12310,12367,12426,12522,12616,12709,12803,12894,12990,13092,13235,13372,13565,13792,14046,14288,14564,14836,15195,15504,15829,16131,16420,16719,17076,17342,17728,18073,18360,18639,18983,19334,19717,20109,20498,20894,21253,21605,22031,22443,22852,22852,23730,24141,24520,24892,25213,25552,25882,26193,26451,26738,27033,27332,27608,27863,28099,28262,28497,28751,28998,29233,29471,29682,29782,29890,30048,30209,30378,30548,30657,30714,30820,30974,31099,31207,31282,31365,31406,31482,31581,31676,31772,31849,31905,31941,31994,32078,32136,32228,32300,32408];
% Serbia_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,4,1,1,10,13,16,16,28,31,39,44,51,58,61,65,66,71,74,80,85,94,99,103,110,117,122,125,130,134,139,144,151,156,162,168,173,179,179,189,193,197,200,203,206,209,215,215,218,220,222,224,225,228,230,231,234,235,237,237,238,238,239,239,240,241,242,242,243,244,245,245,246,247,248,249,250,250,251,252,252,253,254,255,256,257,258,259,260,261,262,263,263,264,265,267,270,274,277,281,287,298,306,311,317,330,341,352,370,382,393,405,418,429,442,452,461,472,482,491,499,508,518,518,534,543,551,558,565,573,582,590,598,605,614,621,626,632,641,646,652,658,661,665,670,674,677,681,684,689,692,695,698,701,705,707,707,709,710,711,713,715,716,718,721,723,724,725,727,728,729,730,731,733];
% Serbia_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,534,637,753,870,977,1025,1067,1094,1152,1182,1209,1260,1292,1343,1343,1426,1551,1574,1723,1971,2160,2453,2732,2732,3290,3600,3824,4084,4301,4479,4713,4799,4904,5067,5370,5541,5699,5857,5920,6067,6277,6438,6524,6606,6698,6726,6766,6852,6910,6931,11056,11348,11189,11268,11348,11362,11411,11465,11511,11561,11624,11697,11769,11822,11889,11947,11997,12054,12111,12154,12232,12338,12464,12581,12662,12772,12912,13064,13176,13267,13366,13447,13562,13651,13719,13780,13876,13940,13991,14047,14417,14799,15179,15564,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Serbia = Serbia_cumulative - Serbia_dead - Serbia_dead;

% Recovered cases are reported with a differente frequency, resulting in
% step curve for active cases
Finland_cumulative = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,3,6,6,6,6,12,15,15,23,30,40,59,59,155,225,244,277,321,336,400,450,523,626,700,792,880,958,1041,1167,1240,1352,1418,1446,1518,1615,1882,1927,2176,2308,2487,2605,2769,2905,2974,3064,3161,3237,3369,3489,3681,3783,3868,4014,4129,4284,4395,4475,4576,4695,4740,4906,4995,5051,5176,5254,5327,5412,5573,5673,5738,5880,5962,5984,6003,6054,6145,6228,6286,6347,6380,6399,6443,6493,6537,6568,6579,6599,6628,6692,6743,6776,6826,6859,6885,6887,6911,6911,6941,6964,6981,7001,7025,7040,7064,7073,7087,7104,7108,7112,7117,7119,7133,7142,7143,7144,7155,7167,7172,7191,7198,7198,7209,7214,7236,7241,7242,7248,7253,7257,7262,7265,7273,7279,7291,7294,7295,7301,7296,7293,7301,7318,7335,7340,7351,7362,7372,7380,7388,7393,7398,7404,7414,7423,7432,7443,7453,7466,7483,7512,7532,7554,7568,7584,7601,7623,7642,7683,7700,7720,7731,7752,7776,7805,7842,7871,7906,7920,7938,7981,8002,8019,8042,8049,8077,8086,8142,8161,8200,8225,8261,8291,8327,8337,8430,8469,8512,8557,8580];
Finland_recovered = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,300,300,300,300,300,300,300,300,300,300,300,300,300,300,1700,1700,1700,1700,2000,2000,2000,2000,2500,2500,2500,2500,2800,2800,3000,3000,3000,3000,3500,3500,3500,3500,4000,4000,4000,4000,4300,4300,4300,5000,5000,5000,5000,5000,4800,4800,4800,4800,4800,5100,5100,5100,5500,5500,5500,5500,5500,5500,5500,5800,5800,5800,5800,5800,5800,5800,6200,6200,6200,6200,6200,6200,6200,6200,6200,6200,6200,6400,6400,6600,6600,6600,6600,6600,6600,6600,6700,6700,6700,6700,6700,6700,6700,6800,6800,6800,6800,6800,6800,6800,6880,6880,6880,6880,6880,6880,6880,6920,6920,6920,6920,6920,6920,6920,6950,6950,6950,6950,6950,6950,6950,6980,6980,6980,6980,6980,6980,6980,7050,7050,7050,7050,7050,7050,7050,7100,7100,7100,7100,7100,7100,7100,7200,7200,7200,7200,7200,7200,7200,7350,7350,7350,7350,7350,7350,7350,7500,7500,7500,7500,7500];
Finland_dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,3,5,7,9,11,13,17,17,19,20,25,28,27,34,40,42,48,49,56,59,64,72,75,82,90,94,98,141,149,172,177,186,190,193,199,206,211,218,220,230,240,246,252,255,260,265,267,271,275,284,287,293,297,298,300,301,304,306,306,306,307,308,312,313,313,314,316,320,318,320,321,322,322,322,323,323,324,324,325,325,325,326,326,326,326,326,326,326,326,327,327,327,327,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,329,328,328,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,331,331,331,331,331,331,333,333,333,333,333,333,333,334,334,334,334,334,334,334,335,335,335,335,335,335,335,336,336,336,336,336,336,336,336,336,337,337,337,337,337];
Finland = Finland_cumulative - Finland_recovered - Finland_dead;

%% Analysis

%% Analysis for EWS from CT

window_size = [7 14 21];

%smoothing, with gaussian filtering, for EWS
smoothed_daily_matrix = [];  
for n=1:size(data_matrix,1)
    smoothed_daily_matrix = [smoothed_daily_matrix ; smoothdata(data_matrix(n,1:end),'gaussian',7)];
end

%detrending data for EWS from CT
detrended_matrix = data_matrix - smoothed_daily_matrix; 


% Estimate variance over rolling window
variance_matrix = [];
for n=1:size(data_matrix,1)
    variance_matrix = [variance_matrix ; movvar(detrended_matrix(n,1:end),[window_size(1) 0])];
end

variance_matrix1 = [];
for n=1:size(data_matrix,1)
    variance_matrix1 = [variance_matrix1 ; movvar(detrended_matrix(n,1:end),[window_size(2) 0])];
end

variance_matrix2 = [];
for n=1:size(data_matrix,1)
    variance_matrix2 = [variance_matrix2 ; movvar(detrended_matrix(n,1:end),[window_size(3) 0])];
end

% Estimate Coefficient of Variation over rolling window
CV_matrix = [];
for n=1:size(data_matrix,1)
    CV_matrix = [CV_matrix ; variance_matrix1(n,1:end) ./ smoothed_daily_matrix(n,1:end)];
end

% Estimate Autocorrelation over rolling window
AC_matrix = [];
for n=1:size(data_matrix,1)
    for a = window_size(2)+1 : (size(detrended_matrix,2)-1)
        vals_t = detrended_matrix(n,a-window_size(2):a);
        vals_t_minus_1 = detrended_matrix(n,a-window_size(2)+1:a+1);
        coeff = corrcoef(vals_t,vals_t_minus_1);
        AC_matrix(n,a) = abs(coeff(1,2));
    end
end

% Skewness over rolling window
skewness_matrix = [];
for n=1:size(data_matrix,1)
    temp = zeros(1,size(detrended_matrix,2));
    for m = window_size(2) : (size(detrended_matrix,2)-window_size(2))
        temp(m) = skewness(detrended_matrix(n,m:m+window_size(2)-1));
    end
    skewness_matrix = [skewness_matrix ; temp];
end


%% SIFig1
% Examples of discarded data series

figure()
plot(France,'linewidth',1.2)
xlabel('Days from first reported infection','FontSize',14)
ylabel('Active cases France','FontSize',14)

figure()
plot(Belgium,'linewidth',1.2)
xlabel('Days from first reported infection','FontSize',14)
ylabel('Active cases Belgium','FontSize',14)

figure()
plot(Finland,'linewidth',1.2)
xlabel('Days from first reported infection','FontSize',14)
ylabel('Active cases Finland','FontSize',14)


%% SIFig2
% Active cases, smoothing and R_eff of chosen countries - created with
% R_t-EWS.ipynb (single figures, then placed together)

%% SIFig3
% Fitting of R(t), to obtain its slope - created with Analysis_Reff.ipynb 
% (single figures, then placed together)

%% SIFig4

% Plots of EWS all together, for remaining countries
% (!) Select one country at a time, then place figures together

country =10;
idx_rebound = find(dates == rebound_vector(country)); 

figure()

subplot(4,2,1);
plot(dates(68:end-30),variance_matrix1(country,68:end-30),'linewidth',1.2)
xline(rebound_vector(country),'--');
ylabel("Var",'fontsize',13)
title('(a)' +  country_names(country))

subplot(4,2,3);
plot(dates(68:end-30),AC_matrix(country,67:end-30),'linewidth',1.2)
xline(rebound_vector(country),'--');
ylabel("AC(1)",'fontsize',13)

subplot(4,2,5);
plot(dates(68:end-30),CV_matrix(country,68:end-30),'linewidth',1.2)
xline(rebound_vector(country),'--');
ylabel("CV",'fontsize',13)

subplot(4,2,7);
plot(dates(68:end-30),skewness_matrix(country,68:end-30),'linewidth',1.2)
xline(rebound_vector(country),'--');
ylabel("Skew",'fontsize',13)


% Plots EWS (next to tipping point)
pos2 = [0.56 0.25 0.4 0.55];
subplot('Position',pos2);
plot(dates(idx_rebound-30:idx_rebound+10),variance_matrix1(country,idx_rebound-30:idx_rebound+10),'linewidth',1.2)
xline(rebound_vector(country),'--');
title('(b) ' +  country_names(country))
%title('Var for ' + country_names(country))
ylabel("Variance",'fontsize',13)



%% Transcritical bifurcation
R0 = 2.5;     % median R0 Covid-19
mu = 0.0001;  % small import rate (1/10000 inhab.)
gamma = 0.34; % recovery rate Covid-19
p = (0:0.01:1);
y = [mu*(1-p(1:60)-1/R0)/(gamma+mu) 0*p(61:end)];

figure()
plot(p, y,'LineWidth',2)
xlabel('Protection rate p','FontSize',13)
ylabel('Infectious proportion','FontSize',13)
ylim([-0.00001 max(y)])
